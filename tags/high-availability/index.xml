<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>high-availability - 标签 - xcx</title>
        <link>https://xiechaoxin.github.io/tags/high-availability/</link>
        <description>high-availability - 标签 - xcx</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</lastBuildDate><atom:link href="https://xiechaoxin.github.io/tags/high-availability/" rel="self" type="application/rss+xml" /><item>
    <title>limit-request</title>
    <link>https://xiechaoxin.github.io/posts/pro/high-availability/limit-request/</link>
    <pubDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/pro/high-availability/limit-request/</guid>
    <description><![CDATA[限流 1 何为限流？为什么要限流？ 针对软件系统来说，限流就是对请求的速率进行限制，避免瞬时的大量请求击垮软件系统。毕竟，软件系统的处理能力是有限]]></description>
</item>
<item>
    <title>超时和重试机制</title>
    <link>https://xiechaoxin.github.io/posts/pro/high-availability/%E8%B6%85%E6%97%B6%E5%92%8C%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/pro/high-availability/%E8%B6%85%E6%97%B6%E5%92%8C%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[超时&amp;重试机制 一旦用户的请求超过某个时间得不到响应就结束此次请求并抛出异常。 如果不进行超时设置可能会导致请求响应速度慢，甚至导致请求]]></description>
</item>
<item>
    <title>高可用系统设计</title>
    <link>https://xiechaoxin.github.io/posts/pro/high-availability/%E9%AB%98%E5%8F%AF%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link>
    <pubDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/pro/high-availability/%E9%AB%98%E5%8F%AF%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</guid>
    <description><![CDATA[高可用系统设计 一篇短小的文章，面试经常遇到的这个问题。本文主要包括下面这些内容： 高可用的定义 哪些情况可能会导致系统不可用？ 有哪些提高系统可用]]></description>
</item>
<item>
    <title>集群</title>
    <link>https://xiechaoxin.github.io/posts/pro/high-availability/%E9%9B%86%E7%BE%A4/</link>
    <pubDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/pro/high-availability/%E9%9B%86%E7%BE%A4/</guid>
    <description><![CDATA[集群 相同的服务部署多份，避免单点故障。]]></description>
</item>
<item>
    <title>降级&amp;熔断</title>
    <link>https://xiechaoxin.github.io/posts/pro/high-availability/%E9%99%8D%E7%BA%A7%E7%86%94%E6%96%AD/</link>
    <pubDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/pro/high-availability/%E9%99%8D%E7%BA%A7%E7%86%94%E6%96%AD/</guid>
    <description><![CDATA[降级&amp;熔断 降级是从系统功能优先级的角度考虑如何应对系统故障。 服务降级指的是当服务器压力剧增的情况下，根据当前业务情况及流量对一些服务]]></description>
</item>
<item>
    <title>性能测试</title>
    <link>https://xiechaoxin.github.io/posts/pro/high-availability/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/pro/high-availability/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
    <description><![CDATA[性能测试入门 性能测试一般情况下都是由测试这个职位去做的，那还需要我们开发学这个干嘛呢？了解性能测试的指标、分类以及工具等知识有助于我们更好地]]></description>
</item>
<item>
    <title>灾备设计和异地多活</title>
    <link>https://xiechaoxin.github.io/posts/pro/high-availability/%E7%81%BE%E5%A4%87%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%BC%82%E5%9C%B0%E5%A4%9A%E6%B4%BB/</link>
    <pubDate>Fri, 17 Jun 2022 17:59:13 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/pro/high-availability/%E7%81%BE%E5%A4%87%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%BC%82%E5%9C%B0%E5%A4%9A%E6%B4%BB/</guid>
    <description><![CDATA[灾备设计&amp;异地多活 灾备 = 容灾+备份。 备份 ： 将系统所产生的的所有重要数据多备份几份。 容灾 ： 在异地建立两个完全相同的系统。当某个地方的系]]></description>
</item>
</channel>
</rss>
