<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>可维护软件之道 - 分类 - xcx</title>
        <link>https://xiechaoxin.github.io/categories/%E5%8F%AF%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6%E4%B9%8B%E9%81%93/</link>
        <description>可维护软件之道 - 分类 - xcx</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 26 May 2023 09:10:46 &#43;0000</lastBuildDate><atom:link href="https://xiechaoxin.github.io/categories/%E5%8F%AF%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6%E4%B9%8B%E9%81%93/" rel="self" type="application/rss+xml" /><item>
    <title>1.开发语言选择</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/1.%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</link>
    <pubDate>Fri, 26 May 2023 09:10:46 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/1.%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</guid>
    <description><![CDATA[考虑角度: 开发难度(成本) 维护难度(成本) 运行环境 是否扩展 编程语言特性 &hellip;]]></description>
</item>
<item>
    <title>7.发挥特定语言的长处</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/7.%E5%8F%91%E6%8C%A5%E7%89%B9%E5%AE%9A%E8%AF%AD%E8%A8%80%E7%9A%84%E9%95%BF%E5%A4%84/</link>
    <pubDate>Wed, 22 Mar 2023 16:18:51 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/7.%E5%8F%91%E6%8C%A5%E7%89%B9%E5%AE%9A%E8%AF%AD%E8%A8%80%E7%9A%84%E9%95%BF%E5%A4%84/</guid>
    <description><![CDATA[C++ Void 指针,低级的强制类型转换(用于协议报文处理) 宏,消除模板化代码 catch 字句 一个好的实践:(代码行数减少/只关注调用的函数/使用 try/catch 的原因) int ret =]]></description>
</item>
<item>
    <title>6.避免特定编程语言的陷阱</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/6.%E9%81%BF%E5%85%8D%E7%89%B9%E5%AE%9A%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E9%99%B7%E9%98%B1/</link>
    <pubDate>Wed, 22 Mar 2023 16:12:09 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/6.%E9%81%BF%E5%85%8D%E7%89%B9%E5%AE%9A%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E9%99%B7%E9%98%B1/</guid>
    <description><![CDATA[C++ 每种编程语言都有各自的缺陷，C++陷阱尤其多。 数组/内存越界：对于 C++来讲 vector 代替数组，用 string 代替 char* 野指针 没有初始化或者己经被 delete (java/python 会抛异常，]]></description>
</item>
<item>
    <title>5.正确使用编程语言</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/5.%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link>
    <pubDate>Wed, 22 Mar 2023 16:01:01 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/5.%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</guid>
    <description><![CDATA[语法正确 1 C++ 语言已经复杂到难以控制的地步，无论对于语言开发者/标准制定者，编译器开发者，使用者来讲都面临着挑战；各种折中设计，蹩脚设计，特例]]></description>
</item>
<item>
    <title>3.注释</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/3.%E6%B3%A8%E9%87%8A/</link>
    <pubDate>Wed, 22 Mar 2023 15:51:23 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/3.%E6%B3%A8%E9%87%8A/</guid>
    <description><![CDATA[恰当使用注释 恰当的注释提升软件可理解性 代码走读时发现的问题，深入细节，解释通用知识，注释难以理解， 模板化注释，垃圾注释(username： uername)]]></description>
</item>
<item>
    <title>日志</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/4.%E6%97%A5%E5%BF%97/</link>
    <pubDate>Wed, 22 Mar 2023 15:43:43 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/4.%E6%97%A5%E5%BF%97/</guid>
    <description><![CDATA[log 1 合理使用日志 帮助跟踪处理流程，函数调用次序，帮助理解系统，效果甚至超过文档和注释，文档注释会不一致，日志是准确的。 甚至能起到注释的作用 L]]></description>
</item>
<item>
    <title>设计模式</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/11.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Wed, 22 Mar 2023 15:03:03 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/11.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[设计模式 面向对象思想的具体应用 软件设计的标准库 1 创建型设计模式 对类的实例话过程的抽象化(客户使用抽象的产品和工厂) 使得系统独立于系统中对象的]]></description>
</item>
<item>
    <title>面向对象设计原则</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/10.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link>
    <pubDate>Wed, 22 Mar 2023 14:14:33 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/10.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid>
    <description><![CDATA[面向对象设计原则 1 SOLID 法则 S Single Responsibility Principle 单一贵任原则 O Open Closed Principle 开放封闭原则 L Liskov Substitution Principle 里氏替换原则 I Interface Segregation Principle 接口分离原则 D Dependency Inversion Principle 依赖倒置原则 1.1 单一职责原则 将]]></description>
</item>
<item>
    <title>代码重构</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/9.%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84/</link>
    <pubDate>Wed, 22 Mar 2023 14:02:12 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/9.%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84/</guid>
    <description><![CDATA[代码重构 重构：提高软件可维护性的利器 重构：改变软件内部结构(代码/设计/架构)，不改变外在行为，提高可维护性 为何重构：软件若不刻意去修正，必]]></description>
</item>
<item>
    <title>整洁代码</title>
    <link>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/8.%E6%95%B4%E6%B4%81%E4%BB%A3%E7%A0%81/</link>
    <pubDate>Wed, 22 Mar 2023 13:33:33 &#43;0000</pubDate><guid>https://xiechaoxin.github.io/posts/common/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%BB%B4%E6%8A%A4%E8%BD%AF%E4%BB%B6/8.%E6%95%B4%E6%B4%81%E4%BB%A3%E7%A0%81/</guid>
    <description><![CDATA[整洁代码 1 好的规范 有意义的命名 变量，函数，参数，类 名符其实 避免误导，最小惊诧 准则，不用看定义就能确当该调用哪个两数或类。 影响代码可读性的 90% 函]]></description>
</item>
</channel>
</rss>
